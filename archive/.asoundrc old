# Before using this config file, make sure you run sudo modprobe snd-aloop
# Eg. ttable4:1,0,2,1,0,3 will join sub-devices 2 and 3 of device 0 of card 1
# into one virtual multichannel device. You can use this device with JACK.
pcm.ttable4 {
    @args [ CARD1 DEV1 SUBDEV1 CARD2 DEV2 SUBDEV2 ]
    @args.CARD1 {
        type string
        default {
            @func getenv
            vars [
                ALSA_PCM_CARD
                ALSA_CARD
            ]
            default {
                @func refer
                name defaults.pcm.card
            }
        }
    }
    @args.DEV1 {
        type integer
        default {
            @func igetenv
            vars [
                ALSA_PCM_DEVICE
            ]
            default {
                @func refer
                name defaults.pcm.device
            }
        }
    }
    @args.SUBDEV1 {
        type integer
        default 0
    }
    @args.CARD2 {
        type string
        default {
            @func getenv
            vars [
                ALSA_PCM_CARD
                ALSA_CARD
            ]
            default {
                @func refer
                name defaults.pcm.card
            }
        }
    }
    @args.DEV2 {
        type integer
        default {
            @func igetenv
            vars [
                ALSA_PCM_DEVICE
            ]
            default {
                @func refer
                name defaults.pcm.device
            }
        }
    }
    @args.SUBDEV2 {
        type integer
        default 0
    }
    type route;
    hint {
        show {
            @func refer
            name defaults.namehint.basic
        }
        description "4 channel multi route"
    }
    slave.pcm {
        type multi;
        slaves.a.pcm {
            type hw
            card $CARD1
            device $DEV1
            subdevice $SUBDEV1
        }
        slaves.a.channels 2;
        slaves.b.pcm {
            type hw
            card $CARD2
            device $DEV2
            subdevice $SUBDEV2
        }
        slaves.b.channels 2;
        bindings.0.slave a;
        bindings.0.channel 0;
        bindings.1.slave a;
        bindings.1.channel 1;
        bindings.2.slave b;
        bindings.2.channel 0;
        bindings.3.slave b;
        bindings.3.channel 1;
    }
    ttable.0.0 1;
    ttable.1.1 1;
    ttable.2.2 1;
    ttable.3.3 1;
}
# sometimes apps need matching ctl device
ctl.ttable4 {
    @args [ CARD1 DEV1 SUBDEV1 CARD2 DEV2 SUBDEV2 ]
    @args.CARD1 {
        type string
        default {
            @func getenv
            vars [
                ALSA_PCM_CARD
                ALSA_CARD
            ]
            default {
                @func refer
                name defaults.pcm.card
            }
        }
    }
    @args.DEV1 {
        type integer
        default {
            @func igetenv
            vars [
                ALSA_PCM_DEVICE
            ]
            default {
                @func refer
                name defaults.pcm.device
            }
        }
    }
    @args.SUBDEV1 {
        type integer
        default 0
    }
    @args.CARD2 {
        type string
        default {
            @func getenv
            vars [
                ALSA_PCM_CARD
                ALSA_CARD
            ]
            default {
                @func refer
                name defaults.pcm.card
            }
        }
    }
    @args.DEV2 {
        type integer
        default {
            @func igetenv
            vars [
                ALSA_PCM_DEVICE
            ]
            default {
                @func refer
                name defaults.pcm.device
            }
        }
    }
    @args.SUBDEV2 {
        type integer
        default 0
    }
    type hw;
    card $CARD1;
}
