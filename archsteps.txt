ls /sys/firmware/efi/efivars
ip link
ping archlinux.org
timedatectl set-ntp true
# Download my scripts
pacman -Sy git
git clone https://github.com/Dathide/archstuff
mv /root/archstuff/lc /bin/lc
# Can now copy any line of this file to clipboard with "lc #"
# Boot into Kubuntu live image and install and open gparted.
# 300MB partition, FAT32, Label: BOOT1
# 82000MB partition, BTRFS, Label: ARCH1
# Format and encrypt the root partition
cryptsetup -y -v luksFormat /dev/disk/by-label/ARCH1
# Enter desired password
cryptsetup open /dev/disk/by-label/ARCH1 cryptroot
mkfs.btrfs /dev/mapper/cryptroot
mount -o noatime,compress-force=zstd:3,space_cache=v2 /dev/mapper/cryptroot /mnt
# Create btrfs subvolumes in /mnt. Var must have its own subvolume for grub-btrfs to work.
btrfs su cr /mnt/@fsroot
btrfs su cr /mnt/@home
btrfs su cr /mnt/@var
btrfs su cr /mnt/@.snapshots
umount /mnt
mount -o noatime,compress-force=zstd:3,space_cache=v2,subvol=@fsroot /dev/mapper/cryptroot /mnt
mkdir /mnt/{boot,home,var,.snapshots}
mount -o noatime,compress-force=zstd:3,space_cache=v2,subvol=@home /dev/mapper/cryptroot /mnt/home
mount -o noatime,compress-force=zstd:3,space_cache=v2,subvol=@var /dev/mapper/cryptroot /mnt/var
mount -o noatime,compress-force=zstd:3,space_cache=v2,subvol=@.snapshots /dev/mapper/cryptroot /mnt/.snapshots
mount /dev/disk/by-label/BOOT43 /mnt/boot
# Copy the following line with "lc (line number)"
pacstrap /mnt base linux linux-lts linux-firmware
genfstab -U /mnt >> /mnt/etc/fstab
arch-chroot /mnt
ln -sf /usr/share/zoneinfo/America/Phoenix /etc/localtime
hwclock --systohc
nano /etc/locale.gen
# Uncomment en_US.UTF-8
locale-gen
nano /etc/locale.conf
# Set first line to LANG=en_US.UTF-8
nano /etc/hostname
# First line: linux-pc
nano /etc/hosts
# 127.0.0.1    localhost
# ::1        localhost
# 127.0.1.1    linux-pc.localdomain    linux-pc
nano /etc/mkinitcpio.conf
# Add "btrfs" to MODULES
# Add "keyboard" and "encrypt" in HOOKS separated by spaces
mkinitcpio -P
nano /etc/pacman.conf
# Uncomment the two multilib lines, ParallelDownloads = 3, and Color
# Preferably copy and paste the following line via nano
pacman -S sudo nano amd-ucode btrfs-progs dhcpcd iwd iproute2 networkmanager network-manager-applet grub grub-btrfs efibootmgr base-devel linux-headers wpa_supplicant dialog os-prober reflector git mtools dosfstools exfat-utils fuse-exfat f2fs-tools e2fsprogs xfsprogs vi xorg xf86-video-amdgpu mesa lib32-mesa amdvlk lib32-amdvlk libva-mesa-driver lib32-libva-mesa-driver mesa-vdpau lib32-mesa-vdpau vkd3d lib32-vkd3d plasma sddm sddm-kcm firefox steam ttf-liberation wqy-zenhei libreoffice compsize neofetch gimp konsole krusader kate snapper dolphin ark p7zip unarchiver lzop lrzip filelight gwenview kcolorchooser kompare qt5-imageformats kimageformats kipi-plugins kamera colord-kde grub-customizer tealdeer mkvtoolnix-gui vlc rust rclone kfind qbittorrent wget unzip imagemagick pacman-contrib kdialog ffmpegthumbs python-pip openvpn easy-rsa networkmanager-openvpn wine-staging winetricks giflib lib32-giflib libpng lib32-libpng libldap lib32-libldap gnutls lib32-gnutls mpg123 lib32-mpg123 openal lib32-openal v4l-utils lib32-v4l-utils libpulse lib32-libpulse alsa-plugins lib32-alsa-plugins alsa-lib lib32-alsa-lib libjpeg-turbo lib32-libjpeg-turbo libxcomposite lib32-libxcomposite libxinerama lib32-libxinerama ncurses lib32-ncurses opencl-icd-loader lib32-opencl-icd-loader libxslt lib32-libxslt libva lib32-libva gtk3 lib32-gtk3 gst-plugins-base-libs lib32-gst-plugins-base-libs vulkan-icd-loader lib32-vulkan-icd-loader cups samba dosbox lib32-mesa vulkan-radeon lib32-vulkan-radeon vulkan-icd-loader lib32-vulkan-icd-loader mesa-demos vulkan-tools lutris gvfs print-manager system-config-printer nss-mdns avahi cron pkgfile bash-completion youtube-dl smplayer smplayer-themes smplayer-skins mplayer twolame htop okular calligra calibre github krita intellij-idea-community-edition nasm handbrake obs-studio alsa-utils dmidecode kvazaar --needed
nano /etc/default/grub
# Uncomment GRUB_DISABLE_SUBMENU=y
# In GRUB_CMDLINE_LINUX_DEFAULT, add:
# cryptdevice=UUID=(device-UUID):cryptroot root=/dev/mapper/cryptroot
# amdgpu.ppfeaturemask=0xffffffff
# At the end, add: GRUB_DISABLE_OS_PROBER=false
passwd
grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
grub-mkconfig -o /boot/grub/grub.cfg
nano /etc/environment
# Last line: EDITOR=nano
source /etc/environment
useradd -m -G users,wheel,uucp -s /bin/bash sapien
passwd sapien
visudo
# Uncomment wheel line
systemctl enable dhcpcd.service
systemctl enable NetworkManager.service
systemctl enable sddm.service
systemctl enable systemd-timesyncd
exit
reboot
sudo reflector --verbose --latest 10 --country 'United States' --protocol https --sort rate --save /etc/pacman.d/mirrorlist
balooctl disable
# If SDDM doesn't open, Ctrl Alt F2 to exit plasma into the tty shell. Ctrl Alt F1 to go back.
# Run following command if displays aren't oriented properly.
xrandr --output DisplayPort-1 --mode “2560x1440” --left-of “DisplayPort-0”
sudo compsize -x /
cd ~
git clone https://aur.archlinux.org/paru.git
cd paru
makepkg -si
cd ~
rm -rf paru
echo 'export PATH=/home/$USER/.local/bin:$PATH' >> ~/.bashrc
echo "alias python='/usr/bin/python3.8'" >> ~/.bashrc
. ~/.bashrc
sudoedit /etc/makepkg.conf
# To speed up AUR compiling, uncomment MAKEFLAGS and set MAKEFLAGS="-j6"
gpg --auto-key-locate nodefault,wkd --locate-keys torbrowser@torproject.org
paru -S spotify corectrl mangohud lib32-mangohud goverlay python38 python36 minecraft-launcher gdlauncher-bin tor-browser protontricks vvenc-git vvdec-git crossover pacdep dcaenc-git avidemux-qt5-git svt-vp9-git
mkdir ~/.config/autostart
cp /usr/share/applications/org.corectrl.corectrl.desktop ~/.config/autostart/org.corectrl.corectrl.desktop
echo 'polkit.addRule(function(action, subject) {
    if ((action.id == "org.corectrl.helper.init" ||
         action.id == "org.corectrl.helperkiller.init") &&
        subject.local == true &&
        subject.active == true &&
        subject.isInGroup("sapien")) {
            return polkit.Result.YES;
    }
});' > ~/90-corectrl.rules
sudo mv ~/90-corectrl.rules /etc/polkit-1/rules.d/90-corectrl.rules
# Open corectrl and set 5700XT max power to 202 Watts
sudoedit /etc/nsswitch.conf
# Change the hosts line to include "mdns_minimal [NOTFOUND=return]" before "resolve" and "dns"
sudo systemctl enable --now avahi-daemon.service
sudo systemctl enable --now cups.service
# Use "cookies.txt" Firefox extension to export YouTube cookies ($ youtube-dl --cookies /path/to/cookies.txt)
# Add my Login Script (which includes balooctl disable) in System Settings -> Startup & Shutdown -> Autostart
# Disable font sub-pixel rendering
# Display and Monitor > Compositor > Rendering backend: OpenGL 3.1 > Latency: Force smoothest animations
# Download firefox config folder and place in home
# Symlink personal downloads folder to ~/Downloads
# KDE Settings > Shortcuts > Custom Shortcuts > Edit > New > Command/URL > Name: Set Monitor Profiles > Key: Scroll Lock > Command: Points to script that uses colormgr
# Custom shortcuts are stored in a text file at: ~/.config/khotkeysrc
# Firefox hardening: www.quippd.com/writing/2021/07/26/firefox-privacy-stop-hardening-love-strict-etp.html
# Run ss2xSteamScaling.sh
# To get meta key to open app launcher, Rclick app launcher, configure, set shortcut to Alt+F1
# github.com/ungoogled-software/ungoogled-chromium-archlinux
# System Settings > Workspace Behavior > Activities > Privacy > Clear history, and then Activities > Default > Check the checkbox
git config --global user.name "dathide"
git config --global user.email "dathide1@outlook.com"
wget https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-amd64-static.tar.xz && mkdir ffmpeg-static
tar xvf ffmpeg-git-amd64-static.tar.xz --directory=ffmpeg-static --strip-components=1 && rm ffmpeg-git-amd64-static.tar.xz
sudo mv ffmpeg-static/ffmpeg ffmpeg-static/ffprobe /usr/local/bin/ && rm -r ffmpeg-static
echo "snd-aloop" >> ~/snd-aloop.conf && sudo mv ~/snd-aloop.conf /etc/modules-load.d/snd-aloop.conf
# Copy .asoundrc from this github to /home/$USER
